{"ast":null,"code":"var _jsxFileName = \"/Users/saad/WebstormProjects/word-fort/src/WordEntry.js\";\nimport React from 'react';\nimport './WordEntry.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WordEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      word: null,\n      phonetic: null,\n      definitions: []\n    };\n  }\n\n  setupWordLesson(data) {\n    this.setState({\n      word: data[0][\"word\"],\n      phonetic: data[0][\"phonetic\"],\n      definitions: this.parseDefinitions(data[0][\"meanings\"])\n    });\n    this.parseAllDefinitions();\n  }\n\n  parseAllDefinitions(data) {\n    let definitions = [];\n\n    for (let i = 0; i < data.length; i++) {\n      let tempDefinitions = this.parseDefinitions(data[i][\"meanings\"]);\n\n      for (let j = 0; j < tempDefinitions.length; j++) {\n        for (let k = 0; k < definitions.length; k++) {\n          if (definitions[k][\"partOfSpeech\"] === tempDefinitions[j][\"partOfSpeech\"]) {\n            definitions[k][\"meanings\"].push(tempDefinitions[j][\"meanings\"]);\n            break;\n          }\n        }\n      }\n    }\n\n    console.log(definitions);\n    return definitions;\n  }\n\n  parseDefinitions(meaningsData) {\n    let definitions = [];\n\n    for (let i = 0; i < meaningsData.length; i++) {\n      let defs = [];\n\n      for (let j = 0; j < meaningsData[i][\"definitions\"].length; j++) {\n        defs.push(meaningsData[i][\"definitions\"][j][\"definition\"]);\n      }\n\n      definitions.push({\n        partOfSpeech: meaningsData[i][\"partOfSpeech\"],\n        meanings: defs\n      });\n    }\n\n    return definitions;\n  }\n\n  getDefinitions() {\n    let definitions = [];\n\n    for (let i = 0; i < this.state.definitions.length; i++) {\n      definitions.push( /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: this.state.definitions[i][\"partOfSpeech\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 31\n      }, this));\n\n      for (let j = 0; j < this.state.definitions[i][\"meanings\"].length; j++) {\n        definitions.push( /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: this.state.definitions[i][\"meanings\"][j]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 35\n        }, this));\n      }\n    }\n\n    return definitions;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.word != null && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lesson\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.word, \" \\u2022 /\", this.state.phonetic, \"/\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.getDefinitions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WordEntry;","map":{"version":3,"sources":["/Users/saad/WebstormProjects/word-fort/src/WordEntry.js"],"names":["React","WordEntry","Component","constructor","props","state","word","phonetic","definitions","setupWordLesson","data","setState","parseDefinitions","parseAllDefinitions","i","length","tempDefinitions","j","k","push","console","log","meaningsData","defs","partOfSpeech","meanings","getDefinitions","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './WordEntry.css'\n\nclass WordEntry extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            word: null,\n            phonetic: null,\n            definitions: []\n        }\n    }\n\n    setupWordLesson(data) {\n        this.setState({\n            word: data[0][\"word\"],\n            phonetic: data[0][\"phonetic\"],\n            definitions: this.parseDefinitions(data[0][\"meanings\"])\n        })\n\n\n        this.parseAllDefinitions();\n    }\n\n    parseAllDefinitions(data) {\n        let definitions = [];\n\n        for (let i = 0; i < data.length; i++) {\n            let tempDefinitions = this.parseDefinitions(data[i][\"meanings\"]);\n\n            for (let j = 0; j < tempDefinitions.length; j++) {\n                for (let k = 0; k < definitions.length; k++) {\n                    if (definitions[k][\"partOfSpeech\"] === tempDefinitions[j][\"partOfSpeech\"]) {\n                        definitions[k][\"meanings\"].push(tempDefinitions[j][\"meanings\"]);\n                        break;\n                    }\n                }\n            }\n        }\n\n        console.log(definitions);\n\n        return definitions;\n    }\n\n    parseDefinitions(meaningsData) {\n        let definitions = [];\n\n        for (let i = 0; i < meaningsData.length; i++) {\n            let defs = [];\n\n            for(let j = 0; j < meaningsData[i][\"definitions\"].length; j++) {\n                defs.push(meaningsData[i][\"definitions\"][j][\"definition\"]);\n            }\n\n            definitions.push({partOfSpeech: meaningsData[i][\"partOfSpeech\"], meanings: defs});\n        }\n\n        return definitions;\n    }\n\n    getDefinitions() {\n        let definitions = [];\n\n        for (let i = 0; i < this.state.definitions.length; i++) {\n            definitions.push((<h4>{this.state.definitions[i][\"partOfSpeech\"]}</h4>));\n\n            for(let j = 0; j < this.state.definitions[i][\"meanings\"].length; j++) {\n                definitions.push((<h6>{this.state.definitions[i][\"meanings\"][j]}</h6>));\n            }\n        }\n\n        return definitions;\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.word != null &&\n                    <div id=\"lesson\">\n                        <h2>{this.state.word} â€¢ /{this.state.phonetic}/</h2>\n                        <div>{this.getDefinitions()}</div>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default WordEntry;"]},"metadata":{},"sourceType":"module"}